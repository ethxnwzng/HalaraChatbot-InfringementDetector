from django.db import models


class GoodsProductSpu(models.Model):
    product_spu_id = models.BigAutoField(primary_key=True)
    selection_spu_id = models.PositiveBigIntegerField()
    internal_style_number = models.CharField(max_length=32, blank=True, null=True)
    internal_styles_code = models.CharField(max_length=32, blank=True, null=True)
    area_id = models.PositiveIntegerField(blank=True, null=True)
    supplier_number = models.CharField(max_length=64, blank=True, null=True)
    supplier_name = models.CharField(max_length=128, blank=True, null=True)
    brand_id = models.PositiveBigIntegerField(blank=True, null=True)
    data_source = models.CharField(max_length=2048, blank=True, null=True)
    title = models.CharField(max_length=512)
    category1_id = models.PositiveBigIntegerField(blank=True, null=True)
    category2_id = models.PositiveBigIntegerField(blank=True, null=True)
    category3_id = models.PositiveBigIntegerField(blank=True, null=True)
    category4_id = models.PositiveBigIntegerField(blank=True, null=True)
    supplier_batch_code = models.CharField(max_length=64, blank=True, null=True)
    supplier_styles_code = models.CharField(max_length=255, blank=True, null=True)
    supplier_quotation = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    purchase_price = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    price_sale = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    price_origin = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    price_unit = models.PositiveBigIntegerField(blank=True, null=True)
    supplier_size = models.PositiveBigIntegerField(blank=True, null=True)
    supplier_inventory_quantity = models.PositiveIntegerField(blank=True, null=True)
    type = models.PositiveBigIntegerField(blank=True, null=True)
    collections = models.CharField(max_length=4096, blank=True, null=True)
    release_type = models.PositiveBigIntegerField(blank=True, null=True)
    release_title = models.CharField(max_length=512, blank=True, null=True)
    short_title = models.CharField(max_length=512, blank=True, null=True)
    release_collections = models.CharField(max_length=4096, blank=True, null=True)
    release_category1_id = models.PositiveBigIntegerField(blank=True, null=True)
    release_category2_id = models.PositiveBigIntegerField(blank=True, null=True)
    release_category3_id = models.PositiveBigIntegerField(blank=True, null=True)
    release_valid_period = models.PositiveIntegerField(blank=True, null=True)
    release_price = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    release_price_unit = models.PositiveBigIntegerField(blank=True, null=True)
    release_supplier_msrp = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    release_item_weight = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    release_item_weight_unit = models.PositiveBigIntegerField(blank=True, null=True)
    release_inventory_quantity = models.PositiveIntegerField(blank=True, null=True)
    release_plan_quantity = models.PositiveIntegerField(blank=True, null=True)
    release_sell_quantity = models.PositiveIntegerField(blank=True, null=True)
    release_zip = models.CharField(max_length=128, blank=True, null=True)
    release_address = models.CharField(max_length=128, blank=True, null=True)
    release_city = models.CharField(max_length=128, blank=True, null=True)
    release_state = models.CharField(max_length=128, blank=True, null=True)
    release_country = models.CharField(max_length=128, blank=True, null=True)
    release_district = models.CharField(max_length=128, blank=True, null=True)
    release_lat = models.CharField(max_length=128, blank=True, null=True)
    release_lng = models.CharField(max_length=128, blank=True, null=True)
    release_unique_key = models.CharField(max_length=255, blank=True, null=True)
    release_online_push_status = models.PositiveIntegerField(blank=True, null=True)
    release_status = models.PositiveIntegerField(blank=True, null=True)
    release_created_user_id = models.PositiveIntegerField(blank=True, null=True)
    release_updated_user_id = models.PositiveIntegerField(blank=True, null=True)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)
    edit_status = models.IntegerField()
    purchase_check_status = models.IntegerField(blank=True, null=True)
    modify_price_status = models.IntegerField(blank=True, null=True)
    offline_reason = models.JSONField(blank=True, null=True)
    release_online_at = models.DateTimeField(blank=True, null=True)
    release_offline_at = models.DateTimeField(blank=True, null=True)
    release_first_online_at = models.DateTimeField(blank=True, null=True)
    has_published = models.PositiveIntegerField(blank=True, null=True)
    current_fixed_price = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    current_magnification = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    current_ending = models.IntegerField(blank=True, null=True)
    fixed_discount = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    scribing_discount = models.DecimalField(max_digits=6, decimal_places=2, blank=True, null=True)
    price_change_type = models.IntegerField(blank=True, null=True)
    last_release_title = models.CharField(max_length=512, blank=True, null=True)
    shopify_online = models.IntegerField()
    deleted = models.IntegerField(blank=True, null=True)
    created_user_name = models.CharField(max_length=64, blank=True, null=True)
    updated_user_name = models.CharField(max_length=64, blank=True, null=True)
    created_user_id = models.PositiveBigIntegerField(blank=True, null=True)
    updated_user_id = models.PositiveBigIntegerField(blank=True, null=True)
    taxable = models.IntegerField()
    lock_position = models.IntegerField()
    clone_type = models.IntegerField(blank=True, null=True)
    source_product_spu_id = models.BigIntegerField(blank=True, null=True)
    risk_status = models.IntegerField(blank=True, null=True)
    after_sales_risk_status = models.CharField(max_length=16, blank=True, null=True)
    product_selling_point_level_first_online_at = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'goods_product_spu'

